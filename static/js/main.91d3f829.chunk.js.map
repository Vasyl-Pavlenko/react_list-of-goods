{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSortType","type","setState","reverse","handleResetToDefault","this","goods","visibleGoods","sort","good1","good2","LENGTH","length","ALPHABET","localeCompare","getReorderedGoods","visibleResetButton","className","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEJ,SAAUG,KAP9B,EAUEE,QAAU,WACR,EAAKD,UAAS,SAACN,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBAZzB,EAgBEO,qBAAuB,WACrB,EAAKJ,eAAeP,EAASM,MAC7B,EAAKG,SAAS,CAAEL,YAAY,KAlBhC,4CAqBE,WAAU,IAAD,OACP,EAAiCQ,KAAKT,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdQ,EAvDH,SACLA,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAENU,EAAY,YAAOD,GAgBzB,OAdIR,GACFS,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAIZ,IAAaL,EAASkB,OACjBF,EAAMG,OAASF,EAAME,OAG1Bd,IAAaL,EAASoB,SACjBJ,EAAMK,cAAcJ,GAGtB,KAIPb,EACKU,EAAaJ,UAGfI,EA+BSQ,CACZrB,EACA,CAAEG,aAAYC,aAGVkB,EAAqBlB,IAAaL,EAASM,MAAQF,EAEzD,OACE,sBACEoB,UAAU,oBADZ,UAME,sBAAKA,UAAU,UAAf,UACE,wBACEhB,KAAK,SACLgB,UAAWC,IACT,iBACA,CAAE,WAAYpB,IAAaL,EAASoB,WAEtCM,QAAS,WACP,EAAKnB,eAAeP,EAASoB,WAPjC,iCAaA,wBACEZ,KAAK,SACLgB,UAAWC,IACT,oBACA,CAAE,WAAYpB,IAAaL,EAASkB,SAEtCQ,QAAS,WACP,EAAKnB,eAAeP,EAASkB,SAPjC,4BAaA,wBACEV,KAAK,SACLgB,UAAWC,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAASd,KAAKF,QANhB,qBAWCa,GACC,wBACEf,KAAK,SACLgB,UAAU,6BAIVE,QAASd,KAAKD,qBANhB,sBAaJ,6BACGE,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,eA5FnB,GAAyBC,aC1DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.91d3f829.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType) {\n    visibleGoods.sort((good1, good2) => {\n      if (sortType === SortType.LENGTH) {\n        return good1.length - good2.length;\n      }\n\n      if (sortType === SortType.ALPHABET) {\n        return good1.localeCompare(good2);\n      }\n\n      return 0;\n    });\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortType = (type: SortType) => {\n    this.setState({ sortType: type });\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleResetToDefault = () => {\n    this.handleSortType(SortType.NONE);\n    this.setState({ isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(\n      goodsFromServer,\n      { isReversed, sortType },\n    );\n\n    const visibleResetButton = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div\n        className=\"\n          section\n          content\n        \"\n      >\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => {\n              this.handleSortType(SortType.ALPHABET);\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => {\n              this.handleSortType(SortType.LENGTH);\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {visibleResetButton && (\n            <button\n              type=\"button\"\n              className=\"button\n                is-danger\n                is-light\n              \"\n              onClick={this.handleResetToDefault}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}